name: Release from CSV
on:
  workflow_call:
    inputs:
      CSV_FILE:
        description: path of csv file
        required: false
        type: string
        default: ./release/Repo_release/repolist.csv
    secrets:
      SLACK_WEBHOOK_URL:
        required: true
      TOKEN:
        required: true

jobs:
  create-releases-from-csv:
    name: Create Releases from CSV
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: install boolean
        run: |
          sudo apt update -y
          sudo apt-get -y install python3-boolean
      - name: Create Releases from CSV
        run: |
          while IFS=, read -r REPO TAG ONLY_TAG BRANCH LATEST BODY PRE_RELEASE DRAFT; do
            if [[ "$REPO" == \"REPO\" ]]; then
              echo "CSV header line ignoring";
              continue;
            fi
            
            for col in LATEST PRE_RELEASE DRAFT ONLY_TAG; do
                if [[ "${!col,,}" == "true" ]]; then
                    eval "$col=true"
                else
                    eval "$col=false"
                fi
            done

           # Output key-value pairs
            echo "REPO: $REPO"
            echo "TAG: $TAG"
            echo "ONLY_TAG: $ONLY_TAG" 
            echo "BRANCH: $BRANCH"
            echo "LATEST: $LATEST"
            echo "BODY: $BODY"
            echo "PRE_RELEASE: $PRE_RELEASE"
            echo "DRAFT: $DRAFT "
            echo "-----------------------------"
            
            # Construct data payload
            data='{
              "tag_name": '$TAG',
              "name": '$TAG',
              "target_commitish": '$BRANCH',
              "body": '$BODY',
              "draft": '$DRAFT',
              "make_latest": '$LATEST',
              "prerelease": '$PRE_RELEASE'
            }'

            # Debugging output
            echo "DEBUG: Data payload:"
            echo "$data"
            
            curl -L \
              -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              https://api.github.com/repos/shubham17998/${REPO}/releases \
              -d "$data"
          done < "${{ inputs.CSV_FILE }}"
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,commit,workflow,job # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: failure() # Pick up events even if the job fails or is canceled.
