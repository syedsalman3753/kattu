name: Release repos
on:
  workflow_call:
    inputs:
      TAG:
        description: 'Tag to be published'
        required: true
        type: string
      ONLY_TAG:
        description: "Only Tag"
        required: false
        type: string
        default: false
      BRANCH:
        description: 'Branch name'
        required: true
        type: string
      LATEST:
        description: 'Latest release'
        required: false
        type: string
        default: true
      BODY:
        description: 'Release body message'
        required: true
        default: 'Changes in this Release'
        type: string
      PRE_RELEASE:
        description: 'Pre-release? True/False'
        required: false
        default: false
        type: string
      DRAFT:
        description: 'Draft? True/False'
        required: false
        default: false
        type: string
    secrets:
      SLACK_WEBHOOK_URL:
        required: true

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create a release with a tag
        run: |
          if [[ '${{ inputs.PRE_RELEASE }}' == 'true' ]]; then
            echo "PRE_RELEASE='--prerelease'" >> $GITHUB_ENV
          fi
          if [[ '${{ inputs.DRAFT }}' == 'true' ]]; then
            echo "DRAFT='--draft'" >> $GITHUB_ENV
          fi
          if [[ '${{ inputs.LATEST }}' == 'false' ]]; then
            echo "LATEST='--latest=false'" >> $GITHUB_ENV
          fi
          if [[ '${{ inputs.ONLY_TAG }}' == 'true' ]]; then
            git tag ${{ inputs.TAG }}
            git push origin ${{ inputs.TAG }}
          else
            echo ${{ env.GH_TOKEN }} > ./token.txt
            gh auth login --hostname github.com --git-protocol https --with-token < ./token.txt
            gh release create ${{ inputs.TAG }} ${{ env.LATEST }} --target=${{ inputs.BRANCH }}   --title "${{ inputs.TAG }}" --notes "${{ inputs.BODY }}" ${{ env.PRE_RELEASE }} ${{ env.DRAFT }}
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LATEST: '--latest'
          DRAFT: ''
          PRE_RELEASE: ''
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,commit,workflow,job # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: failure() # Pick up events even if the job fails or is canceled.